{%- liquid
  if section.settings.enable_filtering or section.settings.enable_sorting
    render 'facets', results: collection, enable_filtering: section.settings.enable_filtering, enable_sorting: section.settings.enable_sorting, image_filter_layout: section.settings.image_filter_layout, location: 'desktop'
  endif
-%}
{{ 'section-main-collection.css' | asset_url | stylesheet_tag }}

<div
  id="section-{{ section.id }}"
  class="site-box-container container--fullscreen"
  data-handle="{{ collection.handle }}"
  style="border:none"
  {%- if section.settings.collection_desktop_layout == 'split' -%}
    data-add-gradient
  {%- endif -%}
>
  {%- assign products_per_page = section.settings.collection_rows | times: 4 -%}

  {%- paginate collection.products by products_per_page -%}
    {%- capture collection_mobile_filter_button -%}
      {%- if section.settings.enable_filtering or section.settings.enable_sorting -%}
        <div class="site-filter-handle-holder site-filter-handle-holder-mobile">
          <site-filter-handle 
            class="site-menu-handle site-filter-handle site-filter-handle-mobile" 
            aria-expanded="false" aria-controls="site-filters"
          >
            <span class="filter-menu" aria-hidden="true">
              {%- render 'theme-symbols', icon: 'filter' -%}
            </span>
            <span class="filter-text">
              {%- liquid
                if section.settings.enable_filtering and section.settings.enable_sorting
                  echo 'collections.filter_and_sort' | t
                elsif section.settings.enable_filtering
                  echo 'collections.filter_button' | t
                elsif section.settings.enable_sorting
                  echo 'collections.sort_button' | t
                endif
              -%}
            </span>
          </site-filter-handle>
        </div>
      {%- endif -%}
    {%- endcapture -%}

    {%- if collection.products and collection.products.size > 0 -%}
      {%- capture first_products -%}

        {%- for product in collection.products limit: 4 -%}
          <div class="site-box box--small box--typo-small lap--box--small-lg box--center-align box--no-padding box--column-flow box__collection" data-order="{{ forloop.index }}">
            <div class="site-box-content product-holder">
              {%- liquid
                assign preload = false
                if section.settings.collection_desktop_layout == "split" 
                  unless section.settings.show_collection_image and collection.image
                    assign preload = true
                  endunless
                endif
                render 'product-item', product: product, product_collection: collection, index: forloop.index0, preload: preload
              -%}
            </div>
          </div>
        {%- endfor -%}

        {%- if collection.products.size < 4 -%}
          {%- for i in (collection.products.size..3) -%}
            {%- assign forloop_plus = forloop.index | plus: collection.products.size -%}
            {%- assign forloop_minus = forloop.index | plus: collection.products.size | minus: 1 -%}
            <div class="site-box box--small box--typo-small lap--box--small-lg box--center-align box--no-padding box--column-flow box__collection {% if forloop_minus > 1 %} lap--hide {% endif %}" data-order="{{ forloop_plus }}"></div>
          {%- endfor -%}
        {%- endif -%}
      {%- endcapture -%}

      {%- if collection.products.size > 4 -%}
        {%- assign rest_products_size = 0 -%}
        {%- capture rest_products -%}
          {%- for product in collection.products offset: 4 -%}
            {%- assign rest_products_size = rest_products_size | plus: 1 -%}
            {% for block in section.blocks %}
              {% if block.type == 'featured_product' %}
                {% assign featured_product = block.settings.product %}
                {% assign block_position = block.settings.position %}
                {% assign block_span = block.settings.block_span %}
                {% if forloop.parentloop.index == block_position %}
                  {% render 'featured-product-block', product: block.settings.product, block: block, block_span: block_span, block_position: block_position, section: section %}
                {% endif %}
              {% endif %}
            {% endfor %}
            <div class="site-box box--small box--typo-small lap--box--small-lg box--center-align box--no-padding box--column-flow box__collection" data-order="{{ forloop.index }}">
              <div class="site-box-content product-holder">
                {%- render 'product-item', product_collection: collection, product: product, index: forloop.index0 -%}
              </div>
            </div>
          {%- endfor -%}
        {%- endcapture -%}
      {%- endif -%}

    {%- else -%}
      {%- capture first_products -%}
        <div class="site-box 
          {% if section.settings.show_collection_banner == false or section.settings.collection_desktop_layout == "full" or section.settings.collection_desktop_layout == "split" and section.settings.show_collection_image and collection.image %} 
            box--small-fl-auto force-no-min-height
          {% else %} 
            box--big box--with-scroll 
          {% endif %} 
          lap--box--small-fl-auto box--typo-small box__heading box--top-align box--column-flow" data-order="1">
          <div 
            {% if section.settings.show_collection_banner == false or section.settings.collection_desktop_layout == "split" and section.settings.show_collection_image and collection.image %}
              
            {% elsif section.settings.collection_desktop_layout != "full"  %} 
              class="reduce-top-margin" 
            {% endif %}
          style="overflow:hidden">
            <div class="site-box-content" style="width:100%">
              <div class="onboard" style="padding:0 30px">
                <p style="margin:0">
                  {%- liquid
                    if collection.filters != empty
                      assign sort_by = collection.sort_by | default: collection.default_sort_by
                      assign terms = collection.terms | escape
                      if collection.current_vendor
                        assign terms = collection.current_vendor | escape
                      endif
                      assign results_url = '?q=' | append: terms | append: '&options%5Bprefix%5D=last&sort_by=' | append: sort_by
                      echo 'collections.empty' | t
                      echo 'collections.use_fewer_filters_html' | t: link: results_url, class: "text-link" | prepend: '<span class="text-size--regular" style="padding-top: 18px;display: block;">' | append: '</span>'
                    else
                      echo 'products.grid.no_products_text' | t
                    endif
                  -%}
                </p>
              </div>
            </div>
          </div>
        </div>
      {%- endcapture -%}
    {%- endif -%}

    <div id="CollectionProductGrid" class="collection__holder">
      <div
        id="main-collection-product-grid"
        data-id="{{ section.id }}"
        {% if collection.products.size <= 4 %}
          data-no-bottom-borders
        {% endif %}
        {% if section.settings.collection_desktop_layout == 'split'
          and section.settings.show_collection_image
          and collection.image
        %}
          data-no-borders-all
        {% elsif section.settings.collection_desktop_layout == 'full' %}
          data-no-borders-all
        {% endif %}
        {% if collection.products.size <= 2 %}
          data-no-bottom-borders-mobile
        {% endif %}
      >
        {%- if section.settings.show_collection_banner -%}
          {%- if section.settings.show_collection_image and collection.image -%}
            <div
              class="site-box no-overflow {% if section.settings.collection_desktop_layout == 'full' %} box--bigger {% else %} box--big {% endif %} lap--box--small-fl-auto box--typo-big box--top-align box--with-scroll box--column-flow box__heading"
              data-order="0"
              data-size="{{ collection.products.size }}"
              data-custom-text="{{ section.id }}"
              data-heading-with-image
              style="height:var(--window-height);min-height:0;border-bottom:0"
              id="left-panel"
            >
              <div class="reduce-top-margin d-flex" style="justify-content: center;">
                <div class="site-box-content">
                  <h1
                    class="title h1 heading"
                    style="color: {% if section.settings.show_collection_banner == false or collection.image == blank %}#000{% else %}#fff{% endif %};"
                  >
                    {{ collection.title }}
                  </h1>
                  {%- if collection.description != blank and section.settings.show_collection_description -%}
                    <div class="rte subtitle">
                      <div>{{ collection.description }}</div>
                    </div>
                  {%- endif -%}
                  {%- if settings.headings_hr -%}<hr>{%- endif -%}
                </div>
              </div>

              <span class="site-box-background {% if section.settings.mobile_overlay_background != "rgba(0,0,0,0)" %} with-image {% endif %} lap--show">
                {%- render 'lazy-image',
                  image: collection.image,
                  id: section.id,
                  sizes: '(max-width: 1024px) and (orientation: portrait) 100vw, 50vw',
                  preload: true
                -%}
              </span>
            </div>

            {% if section.settings.collection_desktop_layout == 'split' %}
              <div
                class="site-box lap--box--small-fl-auto box--typo-big box--top-align box--column-flow box__collection_first_products mobile-hide-important"
                data-order="0"
              >
                <div
                  class="product-grid-border-fix fix-bottom-border fix-borders-split"
                  data-grid-columns="2"
                  id="right-panel"
                >
                  {{ first_products }}
                </div>
              </div>
            {% endif %}

            {{ collection_mobile_filter_button }}
            <div
              class="product-grid-border-fix fix-bottom-border {% if section.settings.collection_desktop_layout == 'split' %} desktop-hide-important-grid {% endif %}"
              style="width:100%;"
              data-count="{{ collection.products.size | modulo: 4 }}"
            >
              {{ first_products }}
            </div>
            <div
              class="product-grid-border-fix fix-bottom-border"
              style="width:100%;"
              data-count="{{ collection.products.size | modulo: 4 }}"
            >
              {{ rest_products }}
            </div>

          {%- else -%}
            <div class="fix-pagination-border">
              <div class="fix-collection-grid-box-design clearfix box--can-stick">
                <div
                  class="site-box box--big lap--box--small-fl-auto box--typo-big box--top-align box--with-scroll box--column-flow box__heading box--extra-border"
                  data-order="0"
                  data-size="{{ collection.products.size }}"
                  data-custom-text="{{ section.id }}"
                  id="fix-height-{{ section.id }}"
                >
                  <div class="reduce-top-margin" style="justify-content: center;">
                    <div class="site-box-content">
                      <h1 class="title h1" style="">{{ collection.title }}</h1>
                      {%- if collection.description != blank and section.settings.show_collection_description -%}
                        <div class="rte subtitle">
                          <div>{{ collection.description }}</div>
                        </div>
                      {%- endif -%}
                      {%- if settings.headings_hr -%}<hr>{%- endif -%}
                    </div>
                  </div>
                </div>

                {{ collection_mobile_filter_button }}
                <div
                  class="product-grid-border-fix fix-bottom-border fix-borders-split {% if rest_products %} fix-borders-rest {% endif %}"
                  data-grid-columns="2"
                  data-grid-columns-mobile="1"
                  id="fix-height-with-{{ section.id }}"
                >
                  {{ first_products }}
                </div>
              </div>

              <style id="css-fix-height-{{ section.id }}"></style>
              {% if section.settings.collection_desktop_layout == 'split' %}
                <script>
                  const fixCollectionHeight = () => {
                    document.getElementById(
                      'css-fix-height-{{ section.id }}'
                    ).innerHTML = `@media screen and (min-width: 1025px), screen and (min-width: 769px) and (orientation: landscape) { 
                      #fix-height-{{ section.id }} {
                        height: ${
                          document.getElementById('fix-height-with-{{ section.id }}').offsetHeight - 1
                        }px !important;
                          }
                          }`;
                  };
                  fixCollectionHeight();
                  window.addEventListener('resize', fixCollectionHeight);
                  new MutationObserver(() => {
                    fixCollectionHeight();
                  }).observe(document.getElementById('CollectionProductGrid'), {
                    attributes: false,
                    childList: true,
                    subtree: false,
                  });
                </script>
              {% endif %}
            </div>

            {%- if rest_products -%}
              <div
                class="product-grid-border-fix fix-bottom-border fix-borders-top-not fix-borders-top-two {% if paginate.pages > 1 %} fix-borders-not {% endif %}"
                data-count="{{ collection.products.size | minus: 4 | modulo: 4 }}"
              >
                {{ rest_products }}
                {%- if rest_products_size == 1 -%}
                  <div class="site-box site-box box--small lap--box--small-lg box__collection"></div>
                {%- endif -%}
              </div>
            {%- endif -%}
          {%- endif -%}

        {%- else -%}
          {{ collection_mobile_filter_button }}
          <div
            class="product-grid-border-fix fix-bottom-border"
            {% if section.settings.show_collection_banner %}
              data-grid-columns="2"
            {% endif %}
            data-count="{{ collection.products.size | modulo: 4 }}"
          >
            {{ first_products }}
            {{ rest_products }}
          </div>
        {%- endif -%}

        {%- render 'pagination', paginate: paginate -%}
      </div>
    </div>
  {%- endpaginate -%}
</div>
{% if section.settings.collection_desktop_layout == 'full' %}
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const filterButton = document.querySelector('#site-filter-handle');
      const collectionBanner = document.querySelector('.site-box .site-box-background');

      if (filterButton && collectionBanner) {
        // Initially hide the filter button
        filterButton.style.display = 'none';

        const handleScroll = () => {
          const bannerBottom = collectionBanner.offsetTop + collectionBanner.offsetHeight;
          const scrollPosition = window.pageYOffset;

          if (scrollPosition > bannerBottom) {
            filterButton.style.display = 'flex';
          } else {
            filterButton.style.display = 'none';
          }
        };

        window.addEventListener('scroll', handleScroll);
        handleScroll(); // Check initial position
      }
    });
  </script>
{% else %}
  <script>
    const leftPanel = document.getElementById('left-panel');
    const rightPanel = document.getElementById('right-panel');
    const fixCollectionHeight = () => {
      leftPanel.style.height = rightPanel.offsetHeight + 'px';
    };
    fixCollectionHeight();
    window.addEventListener('resize', fixCollectionHeight);
    new MutationObserver(() => {
      fixCollectionHeight();
    }).observe(document.getElementById('CollectionProductGrid'), {
      attributes: false,
      childList: true,
      subtree: false,
    });
  </script>
{% endif %}

<script>
  const featuredProductBlocks = document.querySelectorAll('.featured-product-block');
  featuredProductBlocks.forEach((block) => {
    console.log('featured product block', block);
    // find the adject product block
    const nextBlock = block.nextElementSibling;
    console.log('next block', nextBlock);
    console.log('next block height', nextBlock.offsetHeight);
    if (nextBlock) {
      const featuredProduct = block.querySelector('.featured-product');
      const featuredProductHeight = featuredProduct.offsetHeight;
      nextBlock.style.height = featuredProductHeight / 2 + 'px';
    }
  });
</script>
{%- if section.settings.mobile_overlay_text != 'rgba(0,0,0,0)'
  and section.settings.show_collection_image
  and collection.image
-%}
  {% style %}
    @media screen and (max-width: 768px), screen and (max-width: 1024px) and (orientation: portrait) {
      .box__heading[data-custom-text="{{ section.id }}"] {
        --main-text: {{ section.settings.mobile_overlay_text }};
      }
      .box__heading[data-custom-text="{{ section.id }}"] {
        color: {{ section.settings.mobile_overlay_text }};
      }
    }
    .box__heading.box--bigger[data-custom-text="{{ section.id }}"] {
      --main-text: {{ section.settings.mobile_overlay_text }};
    }
    .box__heading.box--bigger[data-custom-text="{{ section.id }}"] {
      color: {{ section.settings.mobile_overlay_text }};
    }
  {% endstyle %}
{%- endif -%}
{%- if section.settings.mobile_overlay_background != 'rgba(0,0,0,0)' -%}
  {% style %}
    #shopify-section-{{ section.id }} .site-box-background.with-image:after {
      background: {{ section.settings.mobile_overlay_background }};
    }
  {% endstyle %}
{%- endif -%}

{% schema %}
{
  "name": "t:sections.split-extra-words.sections.main-collection-page.name",
  "class": "mount-products mount-images mount-facets mount-border-fix mount-collection",
  "settings": [
    {
      "type": "header",
      "content": "t:sections.split-extra-words.sections.main-collection-page.settings.banner.name"
    },
    {
      "type": "select",
      "id": "collection_desktop_layout",
      "label": "t:sections.split-extra-words.sections.main-collection-page.settings.desktop_layout.label",
      "options": [
        {
          "value": "split",
          "label": "t:sections.split-extra-words.sections.main-collection-page.settings.desktop_layout.options__1"
        },
        {
          "value": "full",
          "label": "t:sections.split-extra-words.sections.main-collection-page.settings.desktop_layout.options__2"
        }
      ],
      "info": "t:sections.split-extra-words.sections.main-collection-page.settings.desktop_layout.info",
      "default": "split"
    },
    {
      "id": "show_collection_banner",
      "type": "checkbox",
      "default": true,
      "label": "t:sections.split-extra-words.sections.main-collection-page.settings.banner.show"
    },
    {
      "id": "show_collection_description",
      "type": "checkbox",
      "default": false,
      "label": "t:sections.main-collection-banner.settings.show_collection_description.label"
    },
    {
      "id": "show_collection_image",
      "type": "checkbox",
      "default": false,
      "label": "t:sections.main-collection-banner.settings.show_collection_image.label"
    },
    {
      "type": "paragraph",
      "content": "t:sections.main-collection-banner.settings.paragraph.content"
    },
    {
      "id": "mobile_overlay_background",
      "type": "color",
      "label": "t:sections.split-extra-words.sections.main-collection-page.settings.mobile_layout.overlay_background",
      "default": "rgba(0,0,0,0)"
    },
    {
      "id": "mobile_overlay_text",
      "type": "color",
      "label": "t:sections.split-extra-words.sections.main-collection-page.settings.mobile_layout.overlay_text",
      "default": "rgba(0,0,0,0)"
    },
    {
      "type": "paragraph",
      "content": "t:sections.split-extra-words.sections.main-collection-page.settings.mobile_layout.info"
    },
    {
      "type": "header",
      "content": "t:sections.split-extra-words.sections.main-collection-page.settings.product_grid.name"
    },
    {
      "type": "range",
      "id": "collection_rows",
      "label": "t:sections.split-extra-words.sections.main-collection-page.settings.product_grid.products_per_row",
      "min": 2,
      "max": 16,
      "default": 3,
      "step": 1
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__1.content"
    },
    {
      "id": "enable_filtering",
      "type": "checkbox",
      "label": "t:sections.main-collection-product-grid.settings.enable_filtering.label",
      "default": true,
      "info": "t:sections.main-collection-product-grid.settings.enable_filtering.info"
    },
    {
      "id": "enable_sorting",
      "type": "checkbox",
      "label": "t:sections.main-collection-product-grid.settings.enable_sorting.label",
      "default": true
    },
    {
      "type": "select",
      "id": "image_filter_layout",
      "label": "t:sections.main-collection-product-grid.settings.image_filter_layout.label",
      "options": [
        {
          "value": "onecolumn",
          "label": "t:sections.local-extra-words.sections.columns.option__0"
        },
        {
          "value": "twocolumns",
          "label": "t:sections.local-extra-words.sections.columns.option__1"
        }
      ],
      "default": "onecolumn"
    }
  ],
  "blocks": [
    {
      "type": "featured_product",
      "name": "Featured Product",
      "settings": [
        {
          "type": "product",
          "id": "product",
          "label": "Product"
        },
        {
          "type": "text",
          "id": "badge_text",
          "label": "Badge Text",
          "default": "New"
        },
        {
          "type": "color",
          "id": "badge_color",
          "label": "Badge Color",
          "default": "#000"
        },
        {
          "type": "color",
          "id": "badge_text_color",
          "label": "Badge Text Color",
          "default": "#fff"
        },
        {
          "type": "header",
          "content": "Position"
        },
        {
          "type": "range",
          "id": "position",
          "label": "Position",
          "min": 1,
          "max": 100,
          "default": 1,
          "step": 1
        },
        {
          "type": "range",
          "id": "block_span",
          "label": "Block Span",
          "min": 1,
          "max": 4,
          "default": 2,
          "step": 1
        }
      ]
    }
  ]
}
{% endschema %}

{%- assign color_scheme_hash = section.settings.color_scheme.settings.background_gradient
  | default: section.settings.color_scheme.settings.background
  | md5
-%}
<script src="https://cdn.jsdelivr.net/npm/@fancyapps/ui@5.0/dist/fancybox/fancybox.umd.js" defer></script>
<link
  rel="stylesheet"
  href="https://cdn.jsdelivr.net/npm/@fancyapps/ui@5.0/dist/fancybox/fancybox.css"
>
<div class="list-column section-spacing color-scheme color-scheme--{{ section.settings.color_scheme.id }} color-scheme--bg-{{ color_scheme_hash }} {% if section.settings.separate_section_with_border %}bordered-section{% endif %}">
  <div class="container container--full list-column-content">
    {% for block in section.blocks %}
      <div class="list-item" {{ block.shopify_attributes }}>
        <div class="hover-image-container">
          <p class="h3 hover-trigger">{{ block.settings.item_text }}</p>
          {% if block.settings.hover_image != blank %}
            <picture>
              {{- block.settings.hover_image | image_url: width: '300x' | image_tag: class: 'hover-image' -}}
            </picture>
          {% endif %}
        </div>
        <a
          href="{{ block.settings.button_link }}"
          class="btn"
        >
          {{- block.settings.button_text -}}
        </a>
      </div>
    {% endfor %}
  </div>
</div>
<style>
  .hover-image-container {
    display: inline-flex;
    cursor: pointer;
    align-items: center;
  }
  .hover-image-container p {
    cursor: pointer;
  }

  .hover-image {
    display: none;
    position: absolute;
    width: 300px;
    height: auto;
    pointer-events: none;
    transform: translate(15px, 15px);
    z-index: 1;
  }
</style>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    Fancybox.bind('[data-fancybox]', {});
    document.querySelectorAll('.hover-image-container').forEach((container) => {
      const hoverTrigger = container.querySelector('.hover-trigger');
      const hoverImage = container.querySelector('.hover-image');

      hoverTrigger.addEventListener('mouseenter', () => {
        hoverImage.style.display = 'block'; // Show image on hover
      });

      hoverTrigger.addEventListener('mouseleave', () => {
        hoverImage.style.display = 'none'; // Hide image when not hovering
      });

      hoverTrigger.addEventListener('mousemove', (e) => {
        console.log(`Mouse X: ${e.pageX}, Mouse Y: ${e.pageY}`);
        if (window.innerWidth < 768) {
          hoverImage.style.left = 0;
        } else {
          hoverImage.style.left = `${e.pageX + 15}px`; // Position image near cursor
        }
        hoverImage.style.top = `${e.pageY + 15}px`;
      });
    });
  });
</script>
<style>
  .list-column-content {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    width: 100%;
    align-items: center;
    margin: 0 auto;
  }
  .list-item {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    gap: 40px;
    padding: 30px 0;
    border-bottom: 1px solid #e7e7e7;
    width: 100%;
    margin: 0 50px;
    @media (max-width: 768px) {
      margin: 0 20px;
      justify-content: center;
      align-items: center;
      text-align: center;
    }
  }
  .btn {
    display: inline-block;
    padding: 10px 20px;
    background-color: #000;
    color: #fff;
    text-decoration: none;
  }
</style>

{% schema %}
{
  "name": "List Column",
  "settings": [
    {
      "type": "checkbox",
      "id": "separate_section_with_border",
      "label": "Separate section with border"
    }
  ],
  "blocks": [
    {
      "type": "list_item",
      "name": "List Item",
      "settings": [
        {
          "type": "text",
          "id": "item_text",
          "label": "Text"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "Button Link"
        },
        {
          "type": "text",
          "id": "button_text",
          "label": "Button Text"
        },
        {
          "type": "image_picker",
          "id": "hover_image",
          "label": "Hover Image"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "List Column"
    }
  ]
}
{% endschema %}
